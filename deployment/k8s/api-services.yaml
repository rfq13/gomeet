apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: gomeet
data:
  config.yaml: |
    server:
      port: 8080
      gin_mode: release
      read_timeout: 30s
      write_timeout: 30s
      idle_timeout: 60s
      max_header_bytes: 1048576
      
    database:
      host: pgbouncer
      port: 6432
      user: postgres
      dbname: gomeet_primary
      ssl_mode: require
      max_open_conns: 500
      max_idle_conns: 100
      conn_max_lifetime: 300s
      conn_max_idle_time: 60s
      
    redis:
      host: redis-cluster
      port: 6379
      db: 0
      max_retries: 3
      pool_size: 500
      min_idle_conns: 50
      dial_timeout: 5s
      read_timeout: 3s
      write_timeout: 3s
      pool_timeout: 4s
      idle_timeout: 300s
      idle_check_frequency: 60s
      
    jwt:
      access_token_expiry: 15m
      refresh_token_expiry: 168h
      
    websocket:
      max_connections: 10000
      read_buffer_size: 4096
      write_buffer_size: 4096
      ping_period: 54s
      pong_wait: 60s
      max_message_size: 1048576
      enable_compression: true
      
    livekit:
      host: livekit-sfu
      port: 7880
      api_key: ${LIVEKIT_API_KEY}
      api_secret: ${LIVEKIT_API_SECRET}
      
    turn:
      servers:
        - host: turn-server-1
          port: 3478
        - host: turn-server-2
          port: 3478
        - host: turn-server-3
          port: 3478
        - host: turn-server-4
          port: 3478
      secret: ${TURN_SECRET}
      
    cors:
      allowed_origins:
        - "https://gomeet.com"
        - "https://api.gomeet.com"
        - "https://app.gomeet.com"
      allowed_methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed_headers:
        - Content-Type
        - Authorization
        - X-Requested-With
      max_age: 86400
      
    rate_limiting:
      enabled: true
      requests_per_minute: 1000
      burst: 2000
      
    logging:
      level: info
      format: json
      output: stdout
      
    metrics:
      enabled: true
      path: /metrics
      port: 9090
      
    tracing:
      enabled: true
      jaeger_endpoint: "http://jaeger:14268/api/traces"
      sample_rate: 0.1
      
    circuit_breaker:
      enabled: true
      max_requests: 1000
      interval: 30s
      timeout: 60s
      
    cache:
      enabled: true
      ttl: 300s
      max_size: 10000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: gomeet
  labels:
    app: auth-service
    component: api
spec:
  replicas: 8
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        component: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - auth-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: auth-service
          image: gomeet/auth-service:latest
          env:
            - name: DATABASE_URL
              value: "postgres://postgres:$(POSTGRES_PASSWORD)@pgbouncer:6432/gomeet_primary?sslmode=require"
            - name: REDIS_URL
              value: "redis://redis-cluster:6379"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: POSTGRES_PASSWORD
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
            - name: TURN_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: TURN_SECRET
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 4000m
              memory: 8Gi
            limits:
              cpu: 8000m
              memory: 16Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meeting-service
  namespace: gomeet
  labels:
    app: meeting-service
    component: api
spec:
  replicas: 12
  selector:
    matchLabels:
      app: meeting-service
  template:
    metadata:
      labels:
        app: meeting-service
        component: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - meeting-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: meeting-service
          image: gomeet/meeting-service:latest
          env:
            - name: DATABASE_URL
              value: "postgres://postgres:$(POSTGRES_PASSWORD)@pgbouncer:6432/gomeet_primary?sslmode=require"
            - name: REDIS_URL
              value: "redis://redis-cluster:6379"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: POSTGRES_PASSWORD
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 4000m
              memory: 8Gi
            limits:
              cpu: 8000m
              memory: 16Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signaling-service
  namespace: gomeet
  labels:
    app: signaling-service
    component: api
spec:
  replicas: 25
  selector:
    matchLabels:
      app: signaling-service
  template:
    metadata:
      labels:
        app: signaling-service
        component: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - signaling-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: signaling-service
          image: gomeet/signaling-service:latest
          env:
            - name: DATABASE_URL
              value: "postgres://postgres:$(POSTGRES_PASSWORD)@pgbouncer:6432/gomeet_primary?sslmode=require"
            - name: REDIS_URL
              value: "redis://redis-cluster:6379"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: POSTGRES_PASSWORD
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
            - name: MAX_WEBSOCKET_CONNECTIONS
              value: "10000"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: websocket
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 6000m
              memory: 12Gi
            limits:
              cpu: 12000m
              memory: 24Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: gomeet
  labels:
    app: chat-service
    component: api
spec:
  replicas: 10
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
        component: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - chat-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: chat-service
          image: gomeet/chat-service:latest
          env:
            - name: DATABASE_URL
              value: "postgres://postgres:$(POSTGRES_PASSWORD)@pgbouncer:6432/gomeet_primary?sslmode=require"
            - name: REDIS_URL
              value: "redis://redis-cluster:6379"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 3000m
              memory: 6Gi
            limits:
              cpu: 6000m
              memory: 12Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: turn-service
  namespace: gomeet
  labels:
    app: turn-service
    component: api
spec:
  replicas: 8
  selector:
    matchLabels:
      app: turn-service
  template:
    metadata:
      labels:
        app: turn-service
        component: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - turn-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: turn-service
          image: gomeet/turn-service:latest
          env:
            - name: REDIS_URL
              value: "redis://redis-cluster:6379"
            - name: TURN_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: TURN_SECRET
            - name: TURN_SERVERS
              value: "turn-server-1:3478,turn-server-2:3478,turn-server-3:3478,turn-server-4:3478"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 2000m
              memory: 4Gi
            limits:
              cpu: 4000m
              memory: 8Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: gomeet
  labels:
    app: auth-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: auth-service
---
apiVersion: v1
kind: Service
metadata:
  name: meeting-service
  namespace: gomeet
  labels:
    app: meeting-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: meeting-service
---
apiVersion: v1
kind: Service
metadata:
  name: signaling-service
  namespace: gomeet
  labels:
    app: signaling-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 8081
      targetPort: 8081
      name: websocket
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: signaling-service
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: gomeet
  labels:
    app: chat-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: chat-service
---
apiVersion: v1
kind: Service
metadata:
  name: turn-service
  namespace: gomeet
  labels:
    app: turn-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: turn-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 8
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: meeting-service-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: meeting-service
  minReplicas: 12
  maxReplicas: 30
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 6
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: signaling-service-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: signaling-service
  minReplicas: 25
  maxReplicas: 60
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: websocket_connections_total
        target:
          type: AverageValue
          averageValue: "5000"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 10
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chat-service-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chat-service
  minReplicas: 10
  maxReplicas: 25
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 5
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: turn-service-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: turn-service
  minReplicas: 8
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
