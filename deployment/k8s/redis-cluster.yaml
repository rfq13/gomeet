apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: gomeet
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    protected-mode no
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # Cluster configuration
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    cluster-announce-ip ${POD_IP}
    cluster-announce-port 6379
    cluster-announce-bus-port 16379
    cluster-migration-barrier 1
    cluster-require-full-coverage no

    # Memory optimization for 50,000 connections
    maxmemory 24gb
    maxmemory-policy allkeys-lru
    maxmemory-samples 10
    lazyfree-lazy-eviction yes
    lazyfree-lazy-expire yes
    lazyfree-lazy-server-del yes
    replica-lazy-flush yes

    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    rdb-save-incremental-fsync yes
    stop-writes-on-bgsave-error no

    # AOF persistence
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    aof-rewrite-incremental-fsync yes

    # Performance tuning for high concurrency
    databases 16
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100

    # Client connections for 50,000 concurrent users
    maxclients 50000
    tcp-keepalive 300
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    client-query-buffer-limit 1gb

    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 1024

    # Latency monitoring
    latency-monitor-threshold 100

    # Memory usage optimization
    activedefrag yes
    active-defrag-ignore-bytes 100mb
    active-defrag-threshold-lower 10
    active-defrag-threshold-upper 100
    active-defrag-cycle-min 1
    active-defrag-cycle-max 25

    # Security
    requirepass ${REDIS_PASSWORD}
    acllog-max-len 128

    # Logging
    loglevel notice
    syslog-enabled yes
    syslog-ident redis

    # Monitoring
    notify-keyspace-events "Ex"

    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-ping-replica-period 10
    repl-timeout 60
    repl-disable-tcp-nodelay no
    repl-backlog-size 1gb
    repl-backlog-ttl 3600
    replica-priority 100
    min-replicas-to-write 1
    min-replicas-max-lag 10

    # Multi-threading
    io-threads 4
    io-threads-do-reads yes

    # jemalloc tuning
    jemalloc-bg-thread yes

    # TLS (if needed)
    # tls-port 6380
    # tls-cert-file /etc/redis/tls/redis.crt
    # tls-key-file /etc/redis/tls/redis.key
    # tls-ca-cert-file /etc/redis/tls/ca.crt
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  namespace: gomeet
  labels:
    app: redis
    role: master
spec:
  serviceName: redis-master
  replicas: 6
  selector:
    matchLabels:
      app: redis
      role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - redis
                topologyKey: kubernetes.io/hostname
      containers:
        - name: redis
          image: redis:7.2-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - containerPort: 6379
              name: client
            - containerPort: 16379
              name: gossip
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              cpu: 4000m
              memory: 16Gi
            limits:
              cpu: 8000m
              memory: 32Gi
          volumeMounts:
            - name: conf
              mountPath: /etc/redis
            - name: data
              mountPath: /data
            - name: logs
              mountPath: /var/log/redis
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: conf
          configMap:
            name: redis-config
        - name: logs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Gi
        storageClassName: do-block-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-replica
  namespace: gomeet
  labels:
    app: redis
    role: replica
spec:
  serviceName: redis-replica
  replicas: 6
  selector:
    matchLabels:
      app: redis
      role: replica
  template:
    metadata:
      labels:
        app: redis
        role: replica
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - redis
                topologyKey: kubernetes.io/hostname
      containers:
        - name: redis
          image: redis:7.2-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
            - --replicaof
            - redis-master-0.redis-master
            - "6379"
          ports:
            - containerPort: 6379
              name: client
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              cpu: 4000m
              memory: 16Gi
            limits:
              cpu: 8000m
              memory: 32Gi
          volumeMounts:
            - name: conf
              mountPath: /etc/redis
            - name: data
              mountPath: /data
            - name: logs
              mountPath: /var/log/redis
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: conf
          configMap:
            name: redis-config
        - name: logs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Gi
        storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: gomeet
  labels:
    app: redis
    role: master
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: client
    - port: 16379
      targetPort: 16379
      name: gossip
  clusterIP: None
  selector:
    app: redis
    role: master
---
apiVersion: v1
kind: Service
metadata:
  name: redis-replica
  namespace: gomeet
  labels:
    app: redis
    role: replica
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: client
  clusterIP: None
  selector:
    app: redis
    role: replica
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: gomeet
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: client
  selector:
    app: redis
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: gomeet
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: redis-cluster-init
          image: redis:7.2-alpine
          command:
            - /bin/sh
            - -c
            - |
              sleep 30
              redis-cli -a $REDIS_PASSWORD --cluster create \
                $(getent hosts redis-master-0.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-master-1.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-master-2.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-master-3.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-master-4.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-master-5.redis-master | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-0.redis-replica | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-1.redis-replica | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-2.redis-replica | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-3.redis-replica | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-4.redis-replica | awk '{print $1}'):6379 \
                $(getent hosts redis-replica-5.redis-replica | awk '{print $1}'):6379 \
                --cluster-replicas 1 --cluster-yes
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: REDIS_PASSWORD
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-master-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: redis-master
  minReplicas: 6
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-replica-hpa
  namespace: gomeet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: redis-replica
  minReplicas: 6
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
