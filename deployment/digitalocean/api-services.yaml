apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: gomeet
  labels:
    app: auth-service
    component: api
    provider: digitalocean
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        component: api
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - auth-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: auth-service
          image: registry.digitalocean.com/gomeet/auth-service:latest
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_DBNAME
            - name: DB_SSLMODE
              value: "require"
            - name: DB_DISABLE_PREPARED_STATEMENTS
              value: "true"
            - name: GORM_DISABLE_PREPARED_STATEMENT
              value: "true"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
            - name: TURN_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: TURN_SECRET
            - name: TURN_SERVER
              value: "turn.filosofine.com"
            - name: GIN_MODE
              value: "release"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meeting-service
  namespace: gomeet
  labels:
    app: meeting-service
    component: api
    provider: digitalocean
spec:
  replicas: 3
  selector:
    matchLabels:
      app: meeting-service
  template:
    metadata:
      labels:
        app: meeting-service
        component: api
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - meeting-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: meeting-service
          image: registry.digitalocean.com/gomeet/auth-service:latest
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_DBNAME
            - name: DB_SSLMODE
              value: "require"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
            - name: GIN_MODE
              value: "release"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signaling-service
  namespace: gomeet
  labels:
    app: signaling-service
    component: api
    provider: digitalocean
spec:
  replicas: 4
  selector:
    matchLabels:
      app: signaling-service
  template:
    metadata:
      labels:
        app: signaling-service
        component: api
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - signaling-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: signaling-service
          image: registry.digitalocean.com/gomeet/auth-service:latest
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_DBNAME
            - name: DB_SSLMODE
              value: "require"
            - name: DB_DISABLE_PREPARED_STATEMENTS
              value: "true"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: LIVEKIT_API_SECRET
            - name: MAX_WEBSOCKET_CONNECTIONS
              value: "10000"
            - name: DO_REGION
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REGION
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: websocket
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: gomeet
  labels:
    app: chat-service
    component: api
    provider: digitalocean
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
        component: api
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - chat-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: chat-service
          image: registry.digitalocean.com/gomeet/auth-service:latest
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_POSTGRES_DBNAME
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: JWT_SECRET
            - name: DO_SPACES_BUCKET
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_SPACES_BUCKET
            - name: DO_SPACES_REGION
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_SPACES_REGION
            - name: DO_SPACES_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_SPACES_ENDPOINT
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: turn-service
  namespace: gomeet
  labels:
    app: turn-service
    component: api
    provider: digitalocean
spec:
  replicas: 2
  selector:
    matchLabels:
      app: turn-service
  template:
    metadata:
      labels:
        app: turn-service
        component: api
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - turn-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: turn-service
          image: registry.digitalocean.com/gomeet/auth-service:latest
          imagePullPolicy: Always
          env:
            - name: SERVICE_TYPE
              value: "turn"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REDIS_PASSWORD
            - name: TURN_SECRET
              valueFrom:
                secretKeyRef:
                  name: gomeet-secrets
                  key: TURN_SECRET
            - name: TURN_SERVERS
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_TURN_SERVER_1
            - name: DO_REGION
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REGION
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: api-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: gomeet
  labels:
    app: frontend
    component: ui
    provider: digitalocean
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: ui
        provider: digitalocean
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - frontend
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: frontend
          image: registry.digitalocean.com/gomeet/frontend:latest
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "5173"
            - name: HOSTNAME
              value: "0.0.0.0"
            - name: NODE_ENV
              value: "production"
            - name: VITE_API_BASE_URL
              value: "https://api.gomeet.com"
            - name: VITE_WEBSOCKET_URL
              value: "wss://api.gomeet.com/api/v1/ws"
            - name: VITE_LIVEKIT_URL
              value: "wss://livekit.gomeet.com"
            - name: VITE_DO_CDN_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_CDN_ENDPOINT
            - name: VITE_DO_REGION
              valueFrom:
                secretKeyRef:
                  name: digitalocean-credentials
                  key: DO_REGION
          ports:
            - containerPort: 5173
              name: http
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /
              port: 5173
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 5173
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: frontend-config
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: gomeet
  labels:
    app: auth-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: auth-service
---
apiVersion: v1
kind: Service
metadata:
  name: meeting-service
  namespace: gomeet
  labels:
    app: meeting-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: meeting-service
---
apiVersion: v1
kind: Service
metadata:
  name: signaling-service
  namespace: gomeet
  labels:
    app: signaling-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 8081
      targetPort: 8081
      name: websocket
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: signaling-service
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: gomeet
  labels:
    app: chat-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: chat-service
---
apiVersion: v1
kind: Service
metadata:
  name: turn-service
  namespace: gomeet
  labels:
    app: turn-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: turn-service
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: gomeet
  labels:
    app: frontend
spec:
  ports:
    - port: 5173
      targetPort: 5173
      name: http
  selector:
    app: frontend
