# =============================================================================
# GoMeet Clean Ingress Configuration
# DigitalOcean Kubernetes Cluster
#
# This is the consolidated and clean ingress configuration that replaces
# all conflicting ingress files with a single, well-structured setup.
# =============================================================================

---
# Frontend Ingress - meet.filosofine.com
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gomeet-frontend-ingress
  namespace: gomeet
  labels:
    app: gomeet
    component: frontend-ingress
    provider: digitalocean
    version: v2.0
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "gomeet-frontend-security-headers@kubernetescrd,gomeet-frontend-compression@kubernetescrd,gomeet-frontend-rate-limit@kubernetescrd"
    traefik.ingress.kubernetes.io/router.priority: "1000"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.tls.options: "modern@kubernetescrd"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  rules:
    - host: meet.filosofine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 5173

---
# API Backend Ingress - api-meet.filosofine.com
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gomeet-api-ingress
  namespace: gomeet
  labels:
    app: gomeet
    component: api-ingress
    provider: digitalocean
    version: v2.0
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "gomeet-api-security-headers@kubernetescrd,gomeet-api-cors@kubernetescrd,gomeet-api-rate-limit@kubernetescrd,gomeet-api-circuit-breaker@kubernetescrd,gomeet-api-retry@kubernetescrd"
    traefik.ingress.kubernetes.io/router.priority: "900"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.tls.options: "modern@kubernetescrd"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  rules:
    - host: api-meet.filosofine.com
      http:
        paths:
          # Health check endpoint - Highest priority
          - path: /health
            pathType: Exact
            backend:
              service:
                name: auth-service
                port:
                  number: 8080
          # API routes with proper service mapping
          - path: /api/v1/auth
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 8080
          - path: /api/v1/meetings
            pathType: Prefix
            backend:
              service:
                name: meeting-service
                port:
                  number: 8080
          - path: /api/v1/chat
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 8080
          - path: /api/v1/turn
            pathType: Prefix
            backend:
              service:
                name: turn-service
                port:
                  number: 8080
          - path: /api/v1/webrtc
            pathType: Prefix
            backend:
              service:
                name: signaling-service
                port:
                  number: 8081
          # Default API route fallback
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 8080

---
# WebSocket Ingress - api-meet.filosifine.com (WebSocket routes)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gomeet-websocket-ingress
  namespace: gomeet
  labels:
    app: gomeet
    component: websocket-ingress
    provider: digitalocean
    version: v2.0
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "gomeet-websocket-headers@kubernetescrd,gomeet-websocket-compression@kubernetescrd,gomeet-websocket-rate-limit@kubernetescrd,gomeet-websocket-circuit-breaker@kubernetescrd"
    traefik.ingress.kubernetes.io/router.priority: "950"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.tls.options: "modern@kubernetescrd"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  rules:
    - host: api-meet.filosofine.com
      http:
        paths:
          # WebSocket routes for real-time communication
          - path: /api/v1/ws
            pathType: Prefix
            backend:
              service:
                name: signaling-service
                port:
                  number: 8081
          # Alternative WebSocket endpoint
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: signaling-service
                port:
                  number: 8081

---
# LiveKit SFU Ingress - livekit.filosofine.com
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gomeet-livekit-ingress
  namespace: gomeet
  labels:
    app: gomeet
    component: livekit-ingress
    provider: digitalocean
    version: v2.0
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "gomeet-livekit-security-headers@kubernetescrd,gomeet-livekit-rate-limit@kubernetescrd"
    traefik.ingress.kubernetes.io/router.priority: "800"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.tls.options: "modern@kubernetescrd"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  rules:
    - host: livekit.filosofine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: livekit-sfu
                port:
                  number: 7880

---
# HTTP to HTTPS Redirect Middleware (Global)
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-https-redirect
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  redirectScheme:
    scheme: https
    permanent: true
    port: "443"

---
# Security Headers Middleware for Frontend
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-frontend-security-headers
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  headers:
    frameDeny: true
    contentTypeNosniff: true
    browserXssFilter: true
    referrerPolicy: "strict-origin-when-cross-origin"
    customRequestHeaders:
      X-Forwarded-Proto: "https"
      X-Forwarded-Host: "meet.filosofine.com"
    customResponseHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
      Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss: https: https://api-meet.filosofine.com; media-src 'self' blob:; frame-src 'self' https://livekit.filosofine.com;"

---
# Security Headers Middleware for API
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-api-security-headers
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  headers:
    frameDeny: true
    contentTypeNosniff: true
    browserXssFilter: true
    referrerPolicy: "strict-origin-when-cross-origin"
    customRequestHeaders:
      X-Forwarded-Proto: "https"
      X-Forwarded-Host: "api-meet.filosofine.com"
    customResponseHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains"
      Content-Security-Policy: "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self'; connect-src 'self' wss: https: https://meet.filosofine.com; media-src 'self' blob:;"

---
# Security Headers Middleware for LiveKit
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-livekit-security-headers
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  headers:
    frameDeny: true
    contentTypeNosniff: true
    browserXssFilter: true
    referrerPolicy: "strict-origin-when-cross-origin"
    customRequestHeaders:
      X-Forwarded-Proto: "https"
      X-Forwarded-Host: "livekit.filosofine.com"
    customResponseHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains"

---
# Rate Limiting Middleware for Frontend
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-frontend-rate-limit
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  rateLimit:
    average: 500
    burst: 1000
    period: 1m

---
# Rate Limiting Middleware for API
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-api-rate-limit
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  rateLimit:
    average: 1000
    burst: 2000
    period: 1m

---
# Rate Limiting Middleware for WebSocket
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-websocket-rate-limit
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  rateLimit:
    average: 2000
    burst: 4000
    period: 1m

---
# Rate Limiting Middleware for LiveKit
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-livekit-rate-limit
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  rateLimit:
    average: 1500
    burst: 3000
    period: 1m

---
# CORS Middleware for API
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-api-cors
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  headers:
    accessControlAllowCredentials: true
    accessControlAllowHeaders:
      - Content-Type
      - Authorization
      - X-Requested-With
      - X-Forwarded-For
      - X-Real-IP
    accessControlAllowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    accessControlAllowOriginList:
      - "https://meet.filosofine.com"
      - "https://api-meet.filosofine.com"
    accessControlMaxAge: 86400

---
# WebSocket Headers Middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-websocket-headers
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
      X-Forwarded-Host: "api-meet.filosofine.com"
      X-Forwarded-For: "{{.ClientHost}}"
      Connection: "Upgrade"
      Upgrade: "websocket"
    accessControlAllowCredentials: true
    accessControlAllowHeaders:
      - "Content-Type"
      - "Authorization"
      - "X-Requested-With"
      - "X-Forwarded-For"
    accessControlAllowMethods:
      - "GET"
      - "POST"
      - "OPTIONS"
    accessControlAllowOriginList:
      - "https://meet.filosofine.com"
      - "https://api-meet.filosofine.com"

---
# Compression Middleware for Frontend
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-frontend-compression
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  compress:
    excludedContentTypes:
      - text/event-stream
      - application/grpc
      - application/wasm
    minResponseBodyBytes: 1024

---
# WebSocket Compression Middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-websocket-compression
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  compress:
    excludedContentTypes:
      - text/event-stream
      - application/grpc
    minResponseBodyBytes: 512

---
# Circuit Breaker Middleware for API
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-api-circuit-breaker
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  circuitBreaker:
    expression: "NetworkErrorRatio() > 0.2"
    checkPeriod: 5s
    fallbackDuration: 10s
    recoveryDuration: 10s

---
# WebSocket Circuit Breaker Middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-websocket-circuit-breaker
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  circuitBreaker:
    expression: "NetworkErrorRatio() > 0.1"
    checkPeriod: 3s
    fallbackDuration: 5s
    recoveryDuration: 5s

---
# Retry Middleware for API
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: gomeet-api-retry
  namespace: gomeet
  labels:
    app: gomeet
    component: middleware
    version: v2.0
spec:
  retry:
    attempts: 3
    initialInterval: 100ms

---
# Modern TLS Options (Enhanced)
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: modern
  namespace: gomeet
  labels:
    app: gomeet
    component: tls-options
    version: v2.0
spec:
  minVersion: "VersionTLS12"
  maxVersion: "VersionTLS13"
  cipherSuites:
    - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
    - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
    - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
    - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
    - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    - "TLS_AES_128_GCM_SHA256"
    - "TLS_AES_256_GCM_SHA384"
    - "TLS_CHACHA20_POLY1305_SHA256"
  sniStrict: true
  curvePreferences:
    - "CurveP521"
    - "CurveP384"
    - "CurveP256"
  clientAuth:
    clientAuthType: "NoClientCert"

---
# Global HTTP to HTTPS Redirect Ingress (Catch-all)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gomeet-http-redirect
  namespace: gomeet
  labels:
    app: gomeet
    component: http-redirect
    provider: digitalocean
    version: v2.0
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "gomeet-https-redirect@kubernetescrd"
    traefik.ingress.kubernetes.io/router.priority: "1"
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
spec:
  rules:
    # Redirect HTTP to HTTPS for all domains
    - host: meet.filosofine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend # Dummy service, will be redirected
                port:
                  number: 5173
    - host: api-meet.filosofine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: auth-service # Dummy service, will be redirected
                port:
                  number: 8080
    - host: livekit.filosofine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: livekit-sfu # Dummy service, will be redirected
                port:
                  number: 7880
